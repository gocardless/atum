# encoding: utf-8
#
# WARNING: Do not edit by hand, this file was generated by Atum:
#
#   https://github.com/gocardless/atum
#
require 'atum'
require 'uri'

# Ensure module namespacing is set up
<% @module_name.split("::").size.times do |i| %>
module <%= @module_name.split("::")[0..i].join("::") %>; end
<% end %>

require_relative '<%= @module_name.downcase.underscore.split("/").last %>/client'
<% @resources.each do |resource| %>
require_relative '<%= @module_name.downcase.underscore.split("/").last %>/<%= resource.name.underscore %>'
<% end %>

module <%= @module_name %>
  extend Forwardable

  <% @resources.each do |resource| %>
  def self.<%= resource.name %>(*args)
    self.client.<%= resource.name %>(*args)
  end
  <% end %>

  # Get a Client configured to use HTTP Basic authentication.
  #
  # @param api_key [String] The API key to use when connecting.
  # @param options [Hash<Symbol,String>] Optionally, custom settings
  #   to use with the client.  Allowed options are `default_headers`,
  #   `cache`, `user` and `url`.
  # @return [Client] A client configured to use the API with HTTP Basic
  #   authentication.
  def self.connect(api_key, options = nil)
    options = self.custom_options(options)
    uri = URI.parse(options[:url])
    uri.user = options.fetch(:user, 'user').gsub('@', '%40')
    uri.password = api_key
    client = Atum::Client.client_from_schema(SCHEMA, uri.to_s, options)
    @client = Client.new(client)
  end

  def self.client
    if @client.nil?
      raise "Client not initialized, call <%= @module_name %>.connect(...)"
    end
    @client
  end

  # Get customized options.
  def self.custom_options(options)
    return self.default_options if options.nil?

    return self.default_options.merge(options) unless options[:default_headers]

    opts = self.default_options.merge(options)
    opts[:default_headers] = self.default_options[:default_headers].merge(options[:default_headers])

    opts
  end

  # Get the default options.
  def self.default_options
    {
      default_headers: {
        <%= @default_headers.merge("User-Agent" => '#{user_agent}').map do |k, v|
          "\"#{k.to_s}\" => \"#{v.to_s}\""
        end.join(",\n        ") %>
    } }
  end

  def self.user_agent
    @user_agent ||=
      begin
        gem_name = "<%= @module_name.downcase.underscore.gsub("/", "-") %>"
        gem_info = "#{gem_name}"
        gem_info += "/v#{<%= @module_name %>::VERSION}" if defined?(<%= @module_name %>::VERSION)
        ruby_engine = defined?(RUBY_ENGINE) ? RUBY_ENGINE : 'ruby'
        ruby_version = RUBY_VERSION
        ruby_version += " p#{RUBY_PATCHLEVEL}" if defined?(RUBY_PATCHLEVEL)
        comment = ["#{ruby_engine} #{ruby_version}"]
        comment << "atum v#{Atum::VERSION}"
        comment << "faraday v#{Faraday::VERSION}"
        comment << RUBY_PLATFORM if defined?(RUBY_PLATFORM)
        "#{gem_info} (#{comment.join("; ")})"
      end
  end

  SCHEMA = Atum::Schemas::ApiSchema.new(JSON.load(<<-'JSON'))
<%= @schema %>
JSON
end
